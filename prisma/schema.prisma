// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id() @default(autoincrement())
  name      String
  username  String  @unique()
  email     String  @unique()
  password  String
  avatarUrl String? @map("avatar_url")

  sessions Session[]
  points   Point[]
  ratings  PointRating[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt() @map("updated_at")

  @@map("users")
}

model Session {
  id    Int    @id() @default(autoincrement())
  token String @unique()

  userId Int  @map("user_id")
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt() @map("updated_at")

  @@map("sessions")
}

model Point {
  id       Int     @id() @default(autoincrement())
  name     String
  address  String
  city     String
  state    String
  verified Boolean @default(false)

  userId  Int           @map("user_id")
  user    User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  images  PointImage[]
  ratings PointRating[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt() @map("updated_at")

  @@map("points")
}

model PointImage {
  id  Int    @id() @default(autoincrement())
  url String

  pointId Int   @map("point_id")
  point   Point @relation(fields: [pointId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt() @map("updated_at")

  @@map("point_images")
}

model PointRating {
  id      Int    @id() @default(autoincrement())
  rating  Float
  comment String

  userId Int  @map("user_id")
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)

  pointId Int   @map("point_id")
  point   Point @relation(fields: [pointId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt() @map("updated_at")

  @@unique([pointId, userId])
  @@map("point_ratings")
}
